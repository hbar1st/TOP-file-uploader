// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String
  files   File[]
  folders Folder[]
}

model File {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  name          String    @unique @db.VarChar(255)
  location      String    @db.VarChar(255)
  size          Int
  shared        Boolean   @default(false)
  shareDuration Int       @default(0)
  author        User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId      Int
  parent        Folder    @relation(fields: [parentId], references: [id], onDelete: Cascade)
  parentId      Int
}

model Folder {
  id            Int       @id @default(autoincrement())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  name          String    @unique @db.VarChar(255)
  shared        Boolean   @default(false)
  shareDuration Int       @default(0)
  author        User      @relation(fields: [authorId], references: [id])
  authorId      Int
  files         File[]
  parent        Folder?   @relation(name: "folderToFolder", fields: [parentId], references: [id])
  parentId      Int?      @unique
  children      Folder[]  @relation(name: "folderToFolder")
}
